


# 经典算法：
说明：按算法类型进行划分，题目来自微软面试高频题目

# 动态规划法
## 【70】 爬楼梯
题目分析：
    - 第 1 级台阶（爬 1 级）
    - 第 2 级台阶（爬 2 级）
    - 第 n 级台阶 从n-1级台阶爬1级或从n-2级台阶爬2级

解法一：递归解法
    - 1级楼梯时有一种方法
    - 2级楼梯时有两种方法
    - 3级。。。。三种方法
    - 1，2，3，5....后面的数等于前面两数之和，就是fibonacci算法
时间复杂度：O(n^2)
空间复杂度：O(n)

解法二：记忆化递归
递归方法会出现重复计算，用记忆化的方法来存储中间结果，避免重复计算。
时间复杂度：O(n)
空间复杂度：O(n)

解法三：动态规划法,可用滚动记录的方法优化空间复杂度O(1)
用dp数组记录中间的每一个状态
时间复杂度：O(n)
空间复杂度：O(n)



# 贪心算法
# 递归和迭代

3. 深度遍历和广度遍历
2. 二叉树
4. 字符串
6. 链表

6. 快速排序
7. 堆排序

- 215
解决一：
思路：使用快速排序来解决问题。先对原数组进行排序，然后返回倒数第k大位置的元素。
时间复杂度：O（nlogn）
空间复杂度：O（logn）快速排序使用了递归，递归使用栈空间的代价是O（logn）

解决二：
思路：基于堆排序来实现。利用优先级队列建立小项堆，堆项元素即为第k大元素。
时间复杂度：O(n)，建堆的时间代价是O(n)。
空间复杂度：O(logn), 递归使用栈的代价。

概念：
    大根堆：就是每个节点都大于或等于其子节点, 二叉树的每个局部都是此。
    小根堆：就是每个节点都小于或等于其子节点, 二叉树的每个局部都是此。


# 二叉树
